{"ast":null,"code":"import { switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MoviesService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://api.themoviedb.org/3';\n    this.apiKey = '?api_key=b6173b294a7ff9f5e53d7acd70d287ba';\n  }\n  getMovies(type = 'upcoming') {\n    return this.http.get(`${this.baseUrl}/movie/${type}${this.apiKey}`).pipe(switchMap(res => {\n      return of(res.results);\n    }));\n  }\n  static #_ = this.ɵfac = function MoviesService_Factory(t) {\n    return new (t || MoviesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MoviesService,\n    factory: MoviesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,EAAE,QAAQ,MAAM;;;AAKzB,OAAM,MAAOC,aAAa;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAW,8BAA8B;IAChD,WAAM,GAAW,2CAA2C;EACrB;EAEvCC,SAAS,CAACC,OAAe,UAAU;IAC/B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACC,OAAO,UAAUF,IAAI,GAAG,IAAI,CAACG,MAAM,EAAE,CAAC,CAACC,IAAI,CAC9EV,SAAS,CAAEW,GAAG,IAAI;MACd,OAAOV,EAAE,CAACU,GAAG,CAACC,OAAO,CAAC;IAC1B,CAAC,CAAC,CACL;EACL;EAAC;qBAXQV,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAW,SAAbX,aAAa;IAAAY,YAFV;EAAM","names":["switchMap","of","MoviesService","constructor","http","getMovies","type","get","baseUrl","apiKey","pipe","res","results","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Dell\\Downloads\\Coding for Courses\\CommonWealth Udemy\\Angular\\movies-app\\src\\app\\services\\movies.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MovieDto } from '../models/movie';\nimport { switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MoviesService {\n    baseUrl: string = 'https://api.themoviedb.org/3';\n    apiKey: string = '?api_key=b6173b294a7ff9f5e53d7acd70d287ba';\n    constructor(private http: HttpClient) {}\n\n    getMovies(type: string = 'upcoming') {\n        return this.http.get<MovieDto>(`${this.baseUrl}/movie/${type}${this.apiKey}`).pipe(\n            switchMap((res) => {\n                return of(res.results);\n            })\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}